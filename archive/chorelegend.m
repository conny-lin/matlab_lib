function [choreoutputlegend] = choreoutputlegend(chorscript)
legend = {};
legend = ...
{'t time -- always the first column unless included again';...
'f frame -- the frame number';...
'D id -- the object ID';...
'n number -- the number of objects tracked';...
'N goodnumber -- the number of objects passing the criteria given';...
'p persistence -- length of time object is tracked';...
'e area';...
's speed';...
'S angular -- angular speed';...
'l length -- measured along major axis, not curve of object';...
'L rellength -- instantaneous length/average length';...
'w width';...
'W relwidth -- instantaneous width/average width';...
'a aspect -- length/width';...
'A relaspect -- instantaneous aspect/average aspect';...
'm midline -- length measured along the curve of object';...
'M morphwidth -- mean width of body about midline';...
'k kink -- head/tail angle difference from body (in degrees)';...
'b bias -- fractional excess of time spent moving one way';...
'P pathlen -- distance traveled forwards (backwards=negative)';...
'c curve -- average angle (in degrees) between body split into 5 segments';...
'd dir -- consistency of direction of motion';...
'x loc_x -- x coordinate of object (mm)';...
'y loc_y -- y coordinate of object (mm)';...
'u vel_x -- x velocity (mm/sec)';...
'v vel_y -- y velocity (mm/sec)';...
'o orient -- orientation of body (degrees, only guaranteed modulo pi)';...
'r crab -- speed perpendicular to body orientation';...
'C custom -- calls plugin';...
'1 tap -- whether a tap (stimulus 1) has occurred';...
'2 puff -- whether a puff (stimulus 2) has occurred';...
'3 stim3 -- whether the first custom stimulus has occurred' ;...
'4 stim4 -- whether the second custom stimulus has occurred.'};

A = {};
A = regexp(legend,' -- ','split'); % split explanation from output prompt
for x = 1:numel(A);
    B(x,1:2) = A{x,1}; % take cell out
end
description = B(:,2);
C = B(:,1);
D = regexp(C,' ','split');
for x = 1:numel(D)
E(x,1:2) = D{x,1}; % take cell out
end
choreoutputlegend = cat(2,E,description);

%% create stat legend
clearvars A;
A = {'^:max -- maximum value';...
'_:min -- minimum value';...
'#:number -- number of items considered in this statistic';...
'-:median -- median value';...
'*:std -- standard deviation';...
':sem -- standard error';...
':var -- variance';...
'?:exists -- 1 if the value exists, 0 otherwise';...
':p25 -- 25th percentile';...
':p75 -- 75th percentile';...
':jitter -- estimate of measurement precision'};
B = regexp(A,':','split');
for x = 1:numel(B);
    C(x,1:2) = B{x,1}; % take cell out
end
shorthand = C(:,1);
D = regexp(C(:,2),' -- ','split');
clearvars A;
for x = 1:numel(D);
    E(x,:) = D{x,1}; % take cell out
end
statlegend = [shorthand,E];
%% end


%% create chor output legend
%% testfile

%% 
output1 = regexprep(chorescript,'-o ','');
outputindex = regexp(output1,'[A-Za-z]'); % find location of letter
outputindex = [outputindex numel(output1)+1];
output3 = [];
for x =1:numel(outputindex)-1
    output3{x} = output1(outputindex(x):outputindex(x+1)-1);
end
output3 = output3';
%% separate outputtype and stats
outputtype = 'a';
for x = 1:numel(output3)
   outputtype(x,1) = output3{x}(1); % find first letter
   if numel(output3{x}) ==2;
       outputstats(x,1) = output3{x}(2); % find stats
   else
       outputstats(x,1) = ' ';
   end
end
%% get output legend
for x = 1:numel(outputtype)
a = strfind(choreoutputlegend(:,1),outputtype(x));
i = not(cellfun(@isempty,a));
F(x,1) = choreoutputlegend(i,2);
end
outputlegend = ['time';F];

%% combine with stats legend
for x = 1:numel(outputstats);
    a = strfind(statlegend(:,2),outputstats(x));
    if isempty(cell2mat(a))==1;
        a = strfind(statlegend(:,1),outputstats(x));
    end 
    i = not(cellfun(@isempty,a));
    F(x,1) = statlegend(i,2);
end
G = [' ';F];
end










