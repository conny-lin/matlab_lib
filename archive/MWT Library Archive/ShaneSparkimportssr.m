function [MWTftrv,MWTftrvL] = ShaneSparkimportssr(pExp,pSave,option,stim)
% reporting
[~,expname] = fileparts(pExp);
display('Importing .ssr generated by ShaneSpark...');
str = 'from [%s]';
display(sprintf(str,expname));
[MWTfn,pMWTf] = dircontentmwt(pExp); % compiling MWTftrv


% creating MWTftrv legend
MWTftrvL = {1,'MWTfile name';2,'Run name';3,'RawData';4,'NReversed';...
5,'TotalN';6,'N_NoResponse';7,'Time';8,'FreqRev';9,'DistxNReversed';...
10,'DistNRev';11,'DistTotalN';12,'DisStd';13,'FreqStd'};
 
% get data
MWTftrv = {};
for x = 1:size(pMWTf,1);
    [fn,~] = dircontentext(pMWTf{x,1},'*.ssr');
    B = {};
    if isempty(fn) ==0; % check if trv exist
        switch option
            case 'OldLinux'
                % analysis using Linux
                A = dlmread(fn{1},' ',5,0);
            case 'ConnyChor'
                A = dlmread(fn{1},' ',0,0);
        end
        
        % validate stim
        if size(A,1) ~=stim;
            warning('response[%d] inconsistent specified stim[%d]',size(A,1),stim);
          
            continue
        else
            i = [1,3:5,8:10,12:16,19:21,23:27]; % index to none zeros
            A = A(:,i); 
            
            B(1,1) = MWTfn(x);
            B(1,2) = fn(1);
            B(1,3) = {A}; % all data
            B{1,4} = A(:,4); % NReversed
            B{1,6} = A(:,3); % N no response
            B{1,5} = A(:,4)+A(:,3); % total N
            B{1,7} = A(:,1); % time
            B{1,8} = A(:,4)./B{1,5}; % get freq
            B{1,9} = A(:,5).*A(:,4); % total reversed distance of all worms
            B{1,10} = A(:,5); % distance of reversed
            B{1,11} = B{:,9}/B{1,5}; % distance of all subjects
            B{1,12} = B{1,10}./B{1,10}(1); %DisStd
            B{1,13} = B{1,8}./B{1,8}(1); % freqStd
            str = '> MWTf[%s] ssr imported';
            display(sprintf(str,MWTfn{x}));
        end
    else
        warning(sprintf('no ssr file found in %s',MWTfn{x}));
    end
    if isempty(B)~=1;
    MWTftrv = [MWTftrv;B];
    end
end


% saving
[savename] = creatematsavename(pExp,'ShaneSparktrv_','.mat'); % create save name
cd(pSave);
save(savename);
